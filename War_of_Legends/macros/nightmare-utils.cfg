#textdomain wesnoth-War_of_Legends

#define WEAPON_SPECIAL_ARCANE_FOCUS

    # fake special used to describe the mechanic
    [dummy]
        id=weapon_arcane_focus
        name= _ "arcane focus"
        name_inactive= _ "arcane focus"
        description={WEAPON_SPECIAL_CAPTION ( _ "Arcane focus")}+ _ "The opposite of arcane resistance is used for damage calculation. Thus, this attack is more efficient against most humans." 
        description_inactive={WEAPON_SPECIAL_CAPTION ( _ "Arcane focus")}+ _ "The opposite of arcane resistance is used for damage calculation. Thus, this attack is more efficient against most humans." 
        apply_to=opponent
    [/dummy]
[/specials]
[/attack]

[event]
    name=turn refresh
    first_time_only=no
    [store_unit]
        [filter]
            [not]
                [filter_wml]
                    [resistance]
                        arcane_focus=$this_unit.variables.has_arcane_focus_res
                    [/resistance]
                [/filter_wml]
            [/not]
        [/filter]
        variable=give_arcane_focus_res
        mode=append
    [/store_unit]
    [while]
        [variable]
            name=i
            less_than=$give_arcane_focus_res.length
        [/variable]
        [do]
            [set_variable]
                name=give_arcane_focus_res[$i].resistance.arcane_focus
                value=200
            [/set_variable]
            [set_variable]
                name=give_arcane_focus_res[$i].resistance.arcane_focus
                add=-$give_arcane_focus_res[$i].resistance.arcane
            [/set_variable]
            [set_variable]
                name=give_arcane_focus_res[$i].variables.has_arcane_focus_res
                value=$give_arcane_focus_res[$i].resistance.arcane_focus
            [/set_variable]
            [unstore_unit]
                variable=give_arcane_focus_res[$i]
            [/unstore_unit]
            [set_variable]
                name=i
                add=1
            [/set_variable]
        [/do]
    [/while]
    {CLEAR_VARIABLE i}
    {CLEAR_VARIABLE give_arcane_focus_res}
[/event]

[+attack]
[+specials]
#enddef

#define SPECIAL_NOTES_ARCANE_FOCUS
_" Many creatures of the world of Wesnoth are partly animated through magic. They perceive the world with more than simply their reason and instinct and are consequently less affected by this sort of mental attack."#enddef

#define MACRO_OBJECT_DECREASE_DEFENSE UNIT TERRAIN AMOUNT
    # macro that will increase the WML defense value of a given unit on a given terrain
    # a defense of 100 in the unit definition means a defense of 0% in game, and vice versa
    [object]
        silent=yes
        [filter]
            x=${UNIT}.x
            y=${UNIT}.y
        [/filter]
        [effect]
            apply_to=defense
            replace=false
            [defense]
                {TERRAIN}={AMOUNT}
            [/defense]
        [/effect]
    [/object]
#enddef

#define MACRO_OBJECT_REPLACE_DEFENSE UNIT TERRAIN AMOUNT
    # macro that will replace the WML defense value of a given unit on a given terrain
    # a defense of 100 in the unit definition means a defense of 0% in game, and vice versa
    [object]
        silent=yes
        [filter]
            x=${UNIT}.x
            y=${UNIT}.y
        [/filter]
        [effect]
            apply_to=defense
            replace=true
            [defense]
                {TERRAIN}={AMOUNT}
            [/defense]
        [/effect]
    [/object]
#enddef

#define MACRO_MEMO_DEFENSE UNIT TERRAIN
    [store_unit]
        [filter]
            x=${UNIT}.x
            y=${UNIT}.y
        [/filter]
        variable=unit_memo_def
    [/store_unit]
    [if]
        [variable]
            name={UNIT}.defense.{TERRAIN}
            equals=""
        [/variable]
        [then]
            # Missing defense is 0% in the engine
            [set_variable]
                name=unit_memo_def.variables.memo_def.{TERRAIN}
                value=100
            [/set_variable]
        [/then]
        [else]
            [set_variable]
                name=unit_memo_def.variables.memo_def.{TERRAIN}
                value=${UNIT}.defense.{TERRAIN}
            [/set_variable]
        [/else]
    [/if]
    [unstore_unit]
        variable=unit_memo_def
    [/unstore_unit]
    {CLEAR_VARIABLE unit_memo_def}
#enddef

#define MACRO_DECREASE_DEFENSE UNIT TERRAIN AMOUNT MAX_DEF
    # it is necessary each time to check if the defense becomes greater than 100 or the game may crash
    [set_variable]
        name=limit_for_addition
        value={MAX_DEF}
    [/set_variable]
    [set_variable]
        name=limit_for_addition
        add=-{AMOUNT}
    [/set_variable]

    {MACRO_MEMO_DEFENSE ({UNIT}) ({TERRAIN})}

    [if]
        [variable]
            name={UNIT}.defense.{TERRAIN}
            less_than=$limit_for_addition
        [/variable]
        [then]
            [if]
                [variable]
                    name={UNIT}.defense.{TERRAIN}
                    less_than=0
                [/variable]
                [then]
                    {MACRO_OBJECT_DECREASE_DEFENSE ({UNIT}) ({TERRAIN}) (-{AMOUNT})}
                [/then]
                [else]
                    {MACRO_OBJECT_DECREASE_DEFENSE ({UNIT}) ({TERRAIN}) ({AMOUNT})}
                [/else]
            [/if]
        [/then]
        [else]
            {MACRO_OBJECT_REPLACE_DEFENSE ({UNIT}) ({TERRAIN}) ({MAX_DEF})}
        [/else]
    [/if]

    {CLEAR_VARIABLE limit_for_addition}
#enddef

#define MACRO_CURSE UNIT AMOUNT MAX_DEF STATUS_IMAGE
    # Will decrease the defense of a given unit to a given amount,
    # on all terrains and to a minimum of (100-MAX_DEF)%

    {MACRO_DECREASE_DEFENSE ({UNIT}) deep_water ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) shallow_water ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) reef ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) swamp_water ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) flat ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) sand ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) forest ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) hills ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) mountains ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) village ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) castle ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) cave ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) frozen ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) unwalkable ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) impassable ({AMOUNT}) {MAX_DEF}}
    {MACRO_DECREASE_DEFENSE ({UNIT}) fungus ({AMOUNT}) {MAX_DEF}}

    [if]
        [variable]
            name={STATUS_IMAGE}
            equals=true
        [/variable]
        [then]
            [modify_unit]
                [filter]
                    x,y=${UNIT}.x,${UNIT}.y
                [/filter]
                [event]
                    name=prerecall
                    id=uncurse on recall
                    first_time_only=no

                    [filter]
                        [filter_wml]
                            [status]
                                cursed=yes
                            [/status]
                        [/filter_wml]
                    [/filter]
                    [modify_unit]
                        [filter]
                            x,y=$|x1,$|y1
                        [/filter]
                                [defense]
                                        castle=$|this_unit.variables.memo_def.castle
                                        cave=$|this_unit.variables.memo_def.cave
                                        deep_water=$|this_unit.variables.memo_def.deep_water
                                        flat=$|this_unit.variables.memo_def.flat
                                        forest=$|this_unit.variables.memo_def.forest
                                        frozen=$|this_unit.variables.memo_def.frozen
                                        fungus=$|this_unit.variables.memo_def.fungus
                                        hills=$|this_unit.variables.memo_def.hills
                                        mountains=$|this_unit.variables.memo_def.mountains
                                        reef=$|this_unit.variables.memo_def.reef
                                        sand=$|this_unit.variables.memo_def.sand
                                        shallow_water=$|this_unit.variables.memo_def.shallow_water
                                        swamp_water=$|this_unit.variables.memo_def.swamp_water
                                        unwalkable=$|this_unit.variables.memo_def.unwalkable
                                        village=$|this_unit.variables.memo_def.village
                                [/defense]
                    [/modify_unit]

                    [remove_unit_overlay]
                        x,y=$|x1,$|y1
                        image="misc/curse.png"
                    [/remove_unit_overlay]

                    [object]
                        silent="yes"
                        [filter]
                            x,y=$|x1,$|y1
                        [/filter]
                        [effect]
                            apply_to=status
                            remove=cursed
                        [/effect]
                    [/object]
                [/event]
            [/modify_unit]
        [/then]
        [else]
            [modify_unit]
                [filter]
                    x,y=${UNIT}.x,${UNIT}.y
                [/filter]
                [event]
                    name=prerecall
                    id=uncurse on recall
                    first_time_only=no

                    [filter]
                        [filter_wml]
                            [status]
                                cursed=yes
                            [/status]
                        [/filter_wml]
                    [/filter]

                    [modify_unit]
                        [filter]
                            x,y=$|x1,$|y1
                        [/filter]
                                [defense]
                                        castle=$|this_unit.variables.memo_def.castle
                                        cave=$|this_unit.variables.memo_def.cave
                                        deep_water=$|this_unit.variables.memo_def.deep_water
                                        flat=$|this_unit.variables.memo_def.flat
                                        forest=$|this_unit.variables.memo_def.forest
                                        frozen=$|this_unit.variables.memo_def.frozen
                                        fungus=$|this_unit.variables.memo_def.fungus
                                        hills=$|this_unit.variables.memo_def.hills
                                        mountains=$|this_unit.variables.memo_def.mountains
                                        reef=$|this_unit.variables.memo_def.reef
                                        sand=$|this_unit.variables.memo_def.sand
                                        shallow_water=$|this_unit.variables.memo_def.shallow_water
                                        swamp_water=$|this_unit.variables.memo_def.swamp_water
                                        unwalkable=$|this_unit.variables.memo_def.unwalkable
                                        village=$|this_unit.variables.memo_def.village
                                [/defense]
                    [/modify_unit]

            [object]
                silent="yes"
                [filter]
                    x,y=$|x1,$|y1
                [/filter]
                [effect]
                    apply_to=status
                    remove=cursed
                [/effect]
            [/object]
        [/event]
    [/modify_unit]
        [/else]
    [/if]

    [if]
        [variable]
            name={STATUS_IMAGE}
            equals=true
        [/variable]
        [then]
            [unit_overlay]
                x,y=${UNIT}.x,${UNIT}.y
                image="misc/curse.png"
            [/unit_overlay]
        [/then]
    [/if]

    [object]
        silent="yes"
        [filter]
            x,y=${UNIT}.x,${UNIT}.y
        [/filter]
        [effect]
            apply_to=status
            add=cursed
        [/effect]
    [/object]
#enddef

#define MACRO_UNCURSE UNIT STATUS_IMAGE
    # Gets the defense of a given unit back to before it was cursed

    [set_variable]
        name={UNIT}.defense.deep_water
        value=${UNIT}.variables.memo_def.deep_water
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.shallow_water
        value=${UNIT}.variables.memo_def.shallow_water
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.reef
        value=${UNIT}.variables.memo_def.reef
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.swamp_water
        value=${UNIT}.variables.memo_def.swamp_water
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.flat
        value=${UNIT}.variables.memo_def.flat
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.sand
        value=${UNIT}.variables.memo_def.sand
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.forest
        value=${UNIT}.variables.memo_def.forest
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.hills
        value=${UNIT}.variables.memo_def.hills
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.mountains
        value=${UNIT}.variables.memo_def.mountains
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.village
        value=${UNIT}.variables.memo_def.village
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.castle
        value=${UNIT}.variables.memo_def.castle
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.cave
        value=${UNIT}.variables.memo_def.cave
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.frozen
        value=${UNIT}.variables.memo_def.frozen
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.unwalkable
        value=${UNIT}.variables.memo_def.unwalkable
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.impassable
        value=${UNIT}.variables.memo_def.impassable
    [/set_variable]
    [set_variable]
        name={UNIT}.defense.fungus
        value=${UNIT}.variables.memo_def.fungus
    [/set_variable]

    [if]
        [variable]
            name={STATUS_IMAGE}
            equals=true
        [/variable]
        [then]
            [unstore_unit]
                variable={UNIT}
            [/unstore_unit]

            [remove_unit_overlay]
                x,y=${UNIT}.x,${UNIT}.y
                image="misc/curse.png"
            [/remove_unit_overlay]

            [object]
                silent="yes"
                [filter]
                    x,y=${UNIT}.x,${UNIT}.y
                [/filter]
                [effect]
                    apply_to=status
                    remove=cursed
                [/effect]
            [/object]
        [/then]
    [/if]
#enddef

#define CURSE_IMAGE_STATUS
image_status#enddef

#define WEAPON_SPECIAL_JINX
    
    [dummy]
        id=weapon_special_jinx
        # these values are used by the lua AI
        value=15
        max_value=90
        name= _ "jinx"
        female_name= _ "female^jinx"
        name_inactive= _ "jinx"
        female_name_inactive= _ "female^jinx"
        description={WEAPON_SPECIAL_CAPTION ( _ "Jinx")}+ _ "Curses the hit unit. The cursed unit gets a 15% defence penalty on every terrain until it is cured by a healer or in a village.
Does not affect undead, and the defence value can't go lower than 10%."
        description_inactive={WEAPON_SPECIAL_CAPTION ( _ "Jinx")}+ _ "Curses the hit unit. The cursed unit gets a 15% defence penalty on every terrain until it is cured by a healer or in a village.
Does not affect undead, and the defence value can't go lower than 10%."
        apply_to=opponent
    [/dummy]
[/specials]
[/attack]

#display the status
[event]
    name=preload
    first_time_only=no
    [lua]
        code=<<
            local _ = wesnoth.textdomain "wesnoth-War_of_Legends"
            local old_unit_status = wesnoth.theme_items.unit_status
            function wesnoth.theme_items.unit_status()
                local u = wesnoth.get_displayed_unit()
                if not u then return {} end
                local s = old_unit_status()
                if u.status.cursed then
                    table.insert(s, { "element", {
                        image = "misc/curse.png",
                        tooltip = _"cursed: This unit is cursed. This unit gets a 15% defence penalty on every terrain."
                    } })
                end
                return s
            end
        >>
    [/lua]
[/event]

# # # # # INFLICT THE CURSE # # # # #

# event that set the unit's "cursed" status when hit by a cursing weapon
# the defense is decreased and a icon is added
[event]
    name=attacker hits
    first_time_only=no

    {VARIABLE {CURSE_IMAGE_STATUS} true}
    [filter_attack]
        special=weapon_special_jinx
    [/filter_attack]
    [filter_second]
        [not]
            [filter_wml]
                [status]
                    not_living=yes
                [/status]
            [/filter_wml]
        [/not]
        [and]
            [not]
                [filter_wml]
                    [status]
                        cursed=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/and]
    [/filter_second]

    [if]
        [variable]
            name=second_unit.gender
            equals="male"
        [/variable]
        [then]
            [unstore_unit]
                variable=second_unit
                text=_ "cursed"
                red,green,blue=255,0,0
            [/unstore_unit]
        [/then]
        [else]
            [unstore_unit]
                variable=second_unit
                text=_ "female^cursed"
                red,green,blue=255,0,0
            [/unstore_unit]
        [/else]
    [/if]
    {MACRO_CURSE second_unit 15 90 {CURSE_IMAGE_STATUS}}
[/event]

[event]
    name=defender hits
    first_time_only=no

    {VARIABLE {CURSE_IMAGE_STATUS} true}
    [filter_second_attack]
        special=weapon_special_jinx
    [/filter_second_attack]
    [filter]
        [not]
            [filter_wml]
                [status]
                    not_living=yes
                [/status]
            [/filter_wml]
        [/not]
        [and]
            [not]
                [filter_wml]
                    [status]
                        cursed=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/and]
    [/filter]

    [if]
        [variable]
            name=second_unit.gender
            equals="male"
        [/variable]
        [then]
            [unstore_unit]
                variable=unit
                text=_ "cursed"
                red,green,blue=255,0,0
            [/unstore_unit]
        [/then]
        [else]
            [unstore_unit]
                variable=unit
                text=_ "female^cursed"
                red,green,blue=255,0,0
            [/unstore_unit]
        [/else]
    [/if]
    {MACRO_CURSE unit 15 90 {CURSE_IMAGE_STATUS}}
[/event]

# # # # # HEAL THE CURSE # # # # #

# event that switches the "cursed" variable to "no" if a unit is resting in a village
# and switches defense back to normal
[event]
    name=turn refresh
    first_time_only=no

    [store_locations]
        [filter]
            side=$side_number
            [filter_wml]
                [status]
                    cursed=yes
                [/status]
            [/filter_wml]
        [/filter]
        variable=uncursed_by_village_on
        mode=append
    [/store_locations]

    {FOREACH uncursed_by_village_on i}
        [if]
            [variable]
                name=uncursed_by_village_on[$i].terrain
                contains=V
            [/variable]
            [then]
                [store_unit]
                    [filter]
                        x=$uncursed_by_village_on[$i].x
                        y=$uncursed_by_village_on[$i].y
                    [/filter]
                    variable=unit_to_uncurse_on_village
                    mode=append
                [/store_unit]
            [/then]
        [/if]
    {NEXT i}
    {CLEAR_VARIABLE uncursed_by_village_on}

    {FOREACH unit_to_uncurse_on_village j}
        {MACRO_UNCURSE unit_to_uncurse_on_village[$j] {CURSE_IMAGE_STATUS}}
    {NEXT j}
    {CLEAR_VARIABLE unit_to_uncurse_on_village}
[/event]

# event that switches the "cursed" variable to "no" if a unit is resting near a unit with cure ability
# and switches defense back to normal
[event]
    name=turn refresh
    first_time_only=no

    [store_locations]
        [filter]
            side=$side_number
            [filter_wml]
                [status]
                    cursed=yes
                [/status]
            [/filter_wml]
            [filter_adjacent]
                is_enemy=no
                ability=curing
            [/filter_adjacent]
        [/filter]
        variable=uncursed_by_healer_on
        mode=append
    [/store_locations]

    {FOREACH uncursed_by_healer_on i}
        [store_unit]
            [filter]
                x=$uncursed_by_healer_on[$i].x
                y=$uncursed_by_healer_on[$i].y
            [/filter]
            variable=unit_to_uncurse_by_healer
            mode=append
        [/store_unit]
    {NEXT i}
    {CLEAR_VARIABLE uncursed_by_healer_on}

    {FOREACH unit_to_uncurse_by_healer j}
            {MACRO_UNCURSE unit_to_uncurse_by_healer[$j] {CURSE_IMAGE_STATUS}}
    {NEXT j}
    {CLEAR_VARIABLE unit_to_uncurse_by_healer}
[/event]

[event]
    name=post advance
    first_time_only=no

    [filter]
        [filter_wml]
            [status]
                cursed=yes
            [/status]
        [/filter_wml]
    [/filter]

    {MACRO_UNCURSE unit {CURSE_IMAGE_STATUS}}
[/event]

[+attack]

[+specials]

#enddef

